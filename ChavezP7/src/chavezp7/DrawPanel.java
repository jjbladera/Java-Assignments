/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package chavezp7;


import java.awt.Color;
import java.awt.Graphics;


/**
 *
 * @author youracow
 */
public class DrawPanel extends javax.swing.JPanel {
    
//    int widthBox;
//    int height;
    private int NumberOfSides;
    private boolean circle;
    private int radius;
    private Color circleColor;
    
    /**
     * Creates new form DrawPanel
     */
    public DrawPanel() {
        initComponents();
        NumberOfSides=3;
        circle=false;
        radius=1;
        circleColor = Color.RED;
        //repaint();
        
    }

    public void setNumberOfSides(int NumberOfSides) {
        this.NumberOfSides = NumberOfSides;
        repaint();
    }

    public void setCircle(boolean circle) {
        this.circle = circle;
        repaint();
    }

    public void setRadius(int radius) {
        this.radius = radius;
        repaint();
    }
    
    public void setCircleColor(Color circleColor) {
        this.circleColor = circleColor;
        repaint();
    }
    
    @Override
    protected void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        
        g.setColor(circleColor);
        int centerX = (getWidth() / 2);
        int centerY = (getHeight() / 2);
        
        //check to what is larger side is lager and take the smaller of the two
        //onsetting radius
        if (centerX < centerY) {
            radius = (centerX*radius)/10;//radius*centerX/10;
        }
        else {
            radius = (centerY*radius)/10;//radius*centerY/10;
        }
        
//        radius(userGiven)*centerX|Y(smallest sidelength)/10(maxdimeter)

        
        int top = (centerY - radius);    // top edge of square                                     
        int left = (centerX - radius);   // left edge of square 

        int [] x = new int[NumberOfSides];
        int [] y = new int[NumberOfSides];
        
        
        for (int i = 0; i < NumberOfSides; i++) {
            double theta = Math.toRadians((360.0/NumberOfSides)*i);
            x[i] = (int) ((radius) * Math.cos(theta));
            y[i] = (int) ((radius) * Math.sin(theta));
        }

        if (circle) {
            g.drawOval(left,top, radius*2, radius*2);
        }
        
        g.translate(centerX, centerY);

        g.drawPolygon(x,y,NumberOfSides);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(null);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 290, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
