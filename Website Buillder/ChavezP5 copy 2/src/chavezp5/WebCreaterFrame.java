/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package chavezp5;

import com.sun.tools.javac.util.Convert;
import java.awt.Font;

/**
 *
 * @author youracow
 */
public class WebCreaterFrame extends javax.swing.JFrame {

    /**
     * Creates new form WebCreaterFrame
     */
    WebsiteCreater Wcreater = new WebsiteCreater();

    public WebCreaterFrame() {
        initComponents();
        uName.setText(Wcreater.getName());
        wHeader.setText(Wcreater.getHeader());
        wProName.setText(Wcreater.getProjectName());
        checkHeader.setSelected(Wcreater.isWantHeader());
        checkNav.setSelected(Wcreater.isWantNav());
        checkFoot.setSelected(Wcreater.isWantFooter());
        colNumber.setSelectedIndex(Wcreater.getNumberOfColumns());
        priceField.setText("$"+Double.toString(Wcreater.getHosting()));
        hostingLength.setValue(Wcreater.getHosting()/(12*5));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerGroup = new javax.swing.ButtonGroup();
        fontGroup = new javax.swing.ButtonGroup();
        colNumber = new javax.swing.JComboBox();
        uName = new javax.swing.JTextField();
        wHeader = new javax.swing.JTextField();
        hostingLength = new javax.swing.JSlider();
        headerFontDef = new javax.swing.JRadioButton();
        headerFontLob = new javax.swing.JRadioButton();
        headerFontAn = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        summary = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        headerTex = new javax.swing.JRadioButton();
        headerDefault = new javax.swing.JRadioButton();
        headerSlider = new javax.swing.JRadioButton();
        checkNav = new javax.swing.JCheckBox();
        checkHeader = new javax.swing.JCheckBox();
        checkFoot = new javax.swing.JCheckBox();
        priceField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        wProName = new javax.swing.JTextField();
        scroller = new javax.swing.JScrollPane();
        summaryField = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        colNumber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Columns", "1 Column", "2 Columns", "3 Columns" }));

        uName.setText("Name");

        wHeader.setText("Main Header");

        hostingLength.setMajorTickSpacing(1);
        hostingLength.setMaximum(5);
        hostingLength.setPaintLabels(true);
        hostingLength.setPaintTicks(true);
        hostingLength.setSnapToTicks(true);
        hostingLength.setValue(0);
        hostingLength.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hostingLengthStateChanged(evt);
            }
        });

        fontGroup.add(headerFontDef);
        headerFontDef.setText("Default");
        headerFontDef.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                headerFontDefStateChanged(evt);
            }
        });

        fontGroup.add(headerFontLob);
        headerFontLob.setText("Lobster");
        headerFontLob.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                headerFontLobStateChanged(evt);
            }
        });

        fontGroup.add(headerFontAn);
        headerFontAn.setText("Anton");
        headerFontAn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                headerFontAnStateChanged(evt);
            }
        });

        jLabel1.setText("Website Builder");

        saveBtn.setText("Save");
        saveBtn.setRequestFocusEnabled(false);
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveBtnMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveBtnMouseEntered(evt);
            }
        });
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        summary.setText("Summary");
        summary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                summaryMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                summaryMouseEntered(evt);
            }
        });
        summary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose Header Font");

        jLabel3.setText("Coose Header Style");

        headerGroup.add(headerTex);
        headerTex.setText("Text Only");
        headerTex.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                headerTexStateChanged(evt);
            }
        });

        headerGroup.add(headerDefault);
        headerDefault.setText("Default");
        headerDefault.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                headerDefaultStateChanged(evt);
            }
        });

        headerGroup.add(headerSlider);
        headerSlider.setText("Slider");
        headerSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                headerSliderStateChanged(evt);
            }
        });

        checkNav.setText("Nav-Bar");
        checkNav.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkNavStateChanged(evt);
            }
        });

        checkHeader.setText("Header");
        checkHeader.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkHeaderStateChanged(evt);
            }
        });

        checkFoot.setText("Footer");
        checkFoot.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkFootStateChanged(evt);
            }
        });

        priceField.setEditable(false);
        priceField.setText("$0.00");
        priceField.setMinimumSize(new java.awt.Dimension(14, 33));

        jLabel4.setText("Price");

        jLabel5.setText("Elements");

        jLabel6.setText("How many columns?");

        wProName.setText("Project Name");

        summaryField.setEditable(false);
        summaryField.setColumns(20);
        summaryField.setRows(5);
        scroller.setViewportView(summaryField);

        jLabel7.setText("Yearly Hosting $60/yr");

        jLabel8.setText("years");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(0, 0, Short.MAX_VALUE)
                                .add(jLabel4)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(priceField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(15, 15, 15))
                            .add(layout.createSequentialGroup()
                                .add(62, 62, 62)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(layout.createSequentialGroup()
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(10, 10, 10)
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                                    .add(wHeader)
                                                    .add(uName)
                                                    .add(wProName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)))
                                            .add(hostingLength, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel7))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(colNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel6)
                                            .add(checkNav)
                                            .add(checkHeader)
                                            .add(checkFoot)
                                            .add(jLabel5)))
                                    .add(layout.createSequentialGroup()
                                        .add(scroller, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(0, 0, Short.MAX_VALUE)))))
                        .add(24, 24, 24)
                        .add(saveBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(summary))
                    .add(layout.createSequentialGroup()
                        .add(109, 109, 109)
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, headerTex)
                                    .add(headerDefault, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(headerSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(jLabel3))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel2)
                                .add(headerFontDef))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, headerFontLob)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, headerFontAn))))
                .add(33, 33, 33))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel1)
                .add(248, 248, 248))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jLabel1)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(headerFontDef)
                            .add(colNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(headerFontLob)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(headerFontAn)
                                .add(33, 33, 33)
                                .add(jLabel3))
                            .add(layout.createSequentialGroup()
                                .add(28, 28, 28)
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(checkNav)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(checkHeader)
                                .add(5, 5, 5)
                                .add(checkFoot)))
                        .add(18, 18, 18)
                        .add(headerDefault)
                        .add(4, 4, 4))
                    .add(layout.createSequentialGroup()
                        .add(uName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(21, 21, 21)
                        .add(wHeader, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(wProName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(23, 23, 23)
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(hostingLength, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(headerSlider)
                        .add(18, 18, 18)
                        .add(headerTex)
                        .add(62, 62, 62))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(jLabel8)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(scroller, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 106, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(priceField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(saveBtn)
                    .add(summary)
                    .add(jLabel4))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        lastMinuteSets();
        Wcreater.saveDoc(); 
    }//GEN-LAST:event_saveBtnActionPerformed

    private void checkHeaderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkHeaderStateChanged
        // TODO add your handling code here:
        if (checkHeader.isSelected()) {
            headerDefault.setEnabled(true);
            headerSlider.setEnabled(true);
            headerTex.setEnabled(true);
            Wcreater.setWantHeader(true);
            headerDefault.setSelected(true);
            enableFont();
        }
        else{
            headerDefault.setEnabled(false);
            headerSlider.setEnabled(false);
            headerTex.setEnabled(false);
            Wcreater.setWantHeader(false);
            Wcreater.setWantCarousel(false);
            disableFont();
        }
    }//GEN-LAST:event_checkHeaderStateChanged

    private void checkNavStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkNavStateChanged
        // TODO add your handling code here:
        if (checkNav.isSelected()) {
            Wcreater.setWantNav(true);
        }
        else{
            Wcreater.setWantNav(false);
        }
    }//GEN-LAST:event_checkNavStateChanged

    private void checkFootStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkFootStateChanged
        // TODO add your handling code here:
        if (checkFoot.isSelected()) {
            Wcreater.setWantFooter(true);
        }
        else{
            Wcreater.setWantFooter(false);
        }
    }//GEN-LAST:event_checkFootStateChanged

    private void headerDefaultStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_headerDefaultStateChanged
        // TODO add your handling code here:
        if (checkHeader.isSelected() && headerDefault.isSelected()) {
            Wcreater.setWantHeader(true);
            enableFont();
            headerFontDef.setSelected(true);
            headerFontDefStateChanged(evt);

        }
        else{
            Wcreater.setWantHeader(false);
            disableFont();
        }
    }//GEN-LAST:event_headerDefaultStateChanged

    private void headerSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_headerSliderStateChanged
        // TODO add your handling code here:
        if (checkHeader.isSelected() && headerSlider.isSelected()) {
            Wcreater.setWantCarousel(true);
            disableFont();
        }
        else{
            Wcreater.setWantCarousel(false);
            enableFont();           
        }
    }//GEN-LAST:event_headerSliderStateChanged
    private void enableFont(){
            headerFontAn.setEnabled(true);
            headerFontDef.setEnabled(true);
            headerFontLob.setEnabled(true);
    }
    private void disableFont(){
            headerFontAn.setEnabled(false);
            headerFontDef.setEnabled(false);
            headerFontLob.setEnabled(false);        
    }
    private void headerTexStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_headerTexStateChanged
        // TODO add your handling code here:
        if (headerTex.isSelected()) {
            Wcreater.setWantTextOnly(true);
            enableFont();
            headerFontDef.setSelected(true);
            headerFontDefStateChanged(evt);
        }
        else{
            Wcreater.setWantTextOnly(false);
        }
    }//GEN-LAST:event_headerTexStateChanged

    private void headerFontLobStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_headerFontLobStateChanged
        // TODO add your handling code here:
        boolean[] headFont = new boolean[3];
        headFont[1] = true;
        Wcreater.setHeadFont(headFont);
    }//GEN-LAST:event_headerFontLobStateChanged

    private void headerFontDefStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_headerFontDefStateChanged
        // TODO add your handling code here:
        boolean[] headFont = new boolean[3];
        headFont[0] = true;
        Wcreater.setHeadFont(headFont);
    }//GEN-LAST:event_headerFontDefStateChanged

    private void headerFontAnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_headerFontAnStateChanged
        // TODO add your handling code here:
        boolean[] headFont = new boolean[3];
        headFont[2] = true;
        Wcreater.setHeadFont(headFont);
    }//GEN-LAST:event_headerFontAnStateChanged

    private void lastMinuteSets(){
        Wcreater.setName(uName.getText());
        Wcreater.setHeader(wHeader.getText());
        Wcreater.setProjectName(wProName.getText());
        Wcreater.setNumberOfColumns(colNumber.getSelectedIndex());
    }
    private void summaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryActionPerformed
        // TODO add your handling code here:
        lastMinuteSets();
        summaryField.setText(Wcreater.toString());
        priceField.setText("$"+Double.toString(Wcreater.getHosting()));
        //add price

    }//GEN-LAST:event_summaryActionPerformed

    private void saveBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseEntered
        // TODO add your handling code here:
        saveBtn.setFont(new Font(null,Font.BOLD,14));
    }//GEN-LAST:event_saveBtnMouseEntered

    private void saveBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseExited
        // TODO add your handling code here:
        saveBtn.setFont(new Font(null,Font.PLAIN,13));

    }//GEN-LAST:event_saveBtnMouseExited

    private void summaryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_summaryMouseEntered
        // TODO add your handling code here:
        summary.setFont(new Font(null,Font.BOLD,14));
    }//GEN-LAST:event_summaryMouseEntered

    private void summaryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_summaryMouseExited
        // TODO add your handling code here:
        summary.setFont(new Font(null,Font.PLAIN,13));
    }//GEN-LAST:event_summaryMouseExited

    private void hostingLengthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hostingLengthStateChanged
        // TODO add your handling code here:
        Wcreater.setHosting(hostingLength.getValue());
    }//GEN-LAST:event_hostingLengthStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebCreaterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebCreaterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebCreaterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebCreaterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebCreaterFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkFoot;
    private javax.swing.JCheckBox checkHeader;
    private javax.swing.JCheckBox checkNav;
    private javax.swing.JComboBox colNumber;
    private javax.swing.ButtonGroup fontGroup;
    private javax.swing.JRadioButton headerDefault;
    private javax.swing.JRadioButton headerFontAn;
    private javax.swing.JRadioButton headerFontDef;
    private javax.swing.JRadioButton headerFontLob;
    private javax.swing.ButtonGroup headerGroup;
    private javax.swing.JRadioButton headerSlider;
    private javax.swing.JRadioButton headerTex;
    private javax.swing.JSlider hostingLength;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField priceField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JScrollPane scroller;
    private javax.swing.JButton summary;
    private javax.swing.JTextArea summaryField;
    private javax.swing.JTextField uName;
    private javax.swing.JTextField wHeader;
    private javax.swing.JTextField wProName;
    // End of variables declaration//GEN-END:variables
}
