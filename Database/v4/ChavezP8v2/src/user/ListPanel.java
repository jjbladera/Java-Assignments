/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ListPanel.java
 *
 * Javier Chavez
 * jchavez589@cnm.edu
 * 
 * Java 1 P8
 */
package user;

import data.DbManager;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Javier
 */
public class ListPanel extends javax.swing.JPanel {
    private DefaultListModel listModel = new DefaultListModel();
    private String[] siteNames;
    private int[] siteIds;

    private DbManager db;
    private final Frame frame;
    private boolean updates;
    
    /** Creates new form ListPanel */
    public ListPanel(DbManager db, Frame fr) {
        this.db = db;
        this.frame = fr;
        updateList();
        initComponents();
    }
    
    public ListPanel() {
        this.db = null;
        this.frame = null;
        updateList();
        initComponents();
    }

    public void setDb(DbManager db) {
        this.db = db;
    }

    void refreshSites() {
        updates = true;
        updateList();
    }  
    private void updateList() 
    {
        try{
            siteNames = db.getWebsiteList();
            siteIds = db.getWebsiteIds();
        }catch (SQLException ex){
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        listModel.clear();  //clear the model to update the new one
        for(int i = 0; i < siteNames.length; i++)
        {
            listModel.addElement(siteNames[i]);
        }
    

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        webList = new javax.swing.JList();

        webList.setModel(listModel);
        webList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                webListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(webList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void webListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_webListValueChanged
    if (updates) {
           webList.clearSelection();
    }
    else
    {
        try {
        frame.setSelectedSite(db.getWebsite(siteIds[webList.getSelectedIndex()]));
        } catch (SQLException ex) {
            Logger.getLogger(ListPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    updates = false;        //update is complete
}//GEN-LAST:event_webListValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList webList;
    // End of variables declaration//GEN-END:variables


}
